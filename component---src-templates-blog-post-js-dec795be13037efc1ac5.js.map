{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","href","twitter","location","post","markdownRemark","siteTitle","frontmatter","title","sources","cover_image_desktop","childImageSharp","fluid","cover_image_mobile","media","description","excerpt","style","opacity","itemScope","itemType","dangerouslySetInnerHTML","__html","html","itemProp","Link","to"],"mappings":"i9BAyDA,EA9CY,WACV,IAAMA,GAAOC,oBAAe,cAiBtBC,EAASF,EAAKG,KAAKC,cAAgBJ,EAAKG,KAAKC,aAAaF,OAC1DG,EAASL,EAAKG,KAAKC,cAAgBJ,EAAKG,KAAKC,aAAaC,OAEhE,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,sBAUCZ,EAAOa,MACN,uCACa,8BAASb,EAAOa,MAD7B,IAC6Cb,EAAOc,SAAW,KAD/D,IAGE,qBAAGC,KAAI,wBAAyBZ,EAAOa,SAAP,KAAhC,wC,8BCiBV,EAvDyB,SAAC,GAAwB,IAAtBlB,EAAqB,EAArBA,KAAMmB,EAAe,EAAfA,SAC1BC,EAAOpB,EAAKqB,eACZC,EAAYF,EAAKG,YAAYC,OAAjB,QAEZC,EAAU,CACdL,EAAKG,YAAYG,oBAAoBC,gBAAgBC,MADvC,iBAGTR,EAAKG,YAAYM,mBAAmBF,gBAAgBC,MAH3C,CAIZE,MAAM,wBAIV,OACE,gBAAC,IAAD,CAAQX,SAAUA,EAAUK,MAAOF,GACjC,gBAAC,IAAD,CACEE,MAAOJ,EAAKG,YAAYC,MACxBO,YAAaX,EAAKG,YAAYQ,aAAeX,EAAKY,UAEpD,uBAAK1B,UAAU,aACb,gBAAC,IAAD,CACEsB,MAAOH,EACPX,IAAI,UACJmB,MAAO,CAAEtB,MAAM,OAASC,OAAO,OAASsB,QAAQ,SAElD,uBAAK5B,UAAU,YACb,uBAAKA,UAAU,gBACb,sBAAIA,UAAU,wBAAwBc,EAAKG,YAAYC,UAK7D,uBAAKlB,UAAU,mBACb,uBAAKA,UAAU,gBACb,2BACEA,UAAU,YACV6B,WAAS,EACTC,SAAS,6BAET,2BACEC,wBAAyB,CAAEC,OAAQlB,EAAKmB,MACxCC,SAAS,gBAGX,gBAAC,EAAAC,KAAD,CAAMC,GAAG,UAAT,WACA,2BACA,8BACE,gBAAC,EAAD","file":"component---src-templates-blog-post-js-dec795be13037efc1ac5.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata && data.site.siteMetadata.author\n  const social = data.site.siteMetadata && data.site.siteMetadata.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","/* eslint-disable react/prop-types */\nimport * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Img from \"gatsby-image\"\nimport \"../styles/blogs_template.scss\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = post.frontmatter.title || `Title`\n\n  const sources = [\n    post.frontmatter.cover_image_desktop.childImageSharp.fluid,\n    {\n      ...post.frontmatter.cover_image_mobile.childImageSharp.fluid,\n      media: `(max-width: 480px)`,\n    },\n  ]\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div className=\"container\">\n        <Img\n          fluid={sources}\n          alt=\"slide-1\"\n          style={{ width: `100%`, height: `100%`, opacity: `0.5` }}\n        />\n        <div className=\"centered\">\n          <div className=\"space-around\">\n            <h1 className=\"large-text bold-text\">{post.frontmatter.title}</h1>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"small-container\">\n        <div className=\"space-around\">\n          <article\n            className=\"blog-post\"\n            itemScope\n            itemType=\"http://schema.org/Article\"\n          >\n            <section\n              dangerouslySetInnerHTML={{ __html: post.html }}\n              itemProp=\"articleBody\"\n            />\n            {/* <p>{post.frontmatter.excerpt}</p> */}\n            <Link to=\"/blogs\">Go Back</Link>\n            <hr />\n            <footer>\n              <Bio />\n            </footer>\n          </article>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostById($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        title\n        author\n        date\n        cover_image_desktop: cover_image {\n          childImageSharp {\n            fluid(fit: FILL, maxWidth: 1600, maxHeight: 600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        cover_image_mobile: cover_image {\n          childImageSharp {\n            fluid(fit: FILL, maxWidth: 800, maxHeight: 1600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}